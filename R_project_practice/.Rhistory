knitr::opts_chunk$set(echo = TRUE)
ventas = read.table('ventas.txt')
show(ventas)
n = nrow(ventas)
print(c('número de filas=',n))
m = round(colMeans(ventas), digits = 4);
round(m, digits = 4);
S = cov(ventas);
round(S, digits = 4);
vt.ventas= round(sum(diag(S)), digits = 4)
vt.ventas
round(sqrt(diag(S)), digits = 4)
R = cor(ventas);
round(R, digits = 4)
round(c(min(R),max(R - diag(ncol(ventas)))), digits = 4);
plot(ventas,pch = 19,cex = 1,upper.panel = NULL,col = 'blue',
main = 'Datos de Ventas',cex.main = 1.4,gap = .15,cex.labels = 2,font.labels = 2)
help("princomp");
pc = princomp(ventas)
pc[1:7]
var = with(pc, sdev^2)
round(var, digits = 4)
sc = 1 - (1/n)
var.eq = (1/sc)*var
round(var.eq, digits = 4)
G = with(pc, loadings)[,]
round(G, digits = 4)
scores = data.frame(with(pc, scores));
show(scores)
G[,1] = -G[,1];
round(G[,1], digits =  4)
scores[,1] = -scores[,1]
round(scores[,1], digits =  4)
m.cp = round(colMeans(scores), digits = 4)
m.cp
S.cp= round(cov(scores), digits =  4)
S.cp
VT.cp = round(sum(diag(cov(scores))),digits = 4)
VT.cp
r = with(scores, range(Comp.1));
plot(scores, pch = 19, cex = 1.2, upper.panel = NULL, col = 'royalblue', main = 'ACP de Ventas', cex.main = 1.3,xlim = r,
ylim = r,gap = .15,cex.labels = 1.5,font.labels = 2)
plot(scores/sqrt(var), pch = 19,cex = 1.2, upper.panel = NULL, col = 'mediumseagreen', main = 'Datos esféricos de Ventas',labels = paste0('esf.',c(1:5)),cex.main = 1.3, gap = .15,cex.labels = 1.5,
font.labels = 2)
prop = S.cp/VT.cp;
acum = cumsum(prop)
table = round(data.frame(S.cp,prop,acum, row.names =NULL ),digits = 4)
cat('', sep = '\n');
prop
acum
show(table)
plot(pc, type = 'l', col = 'royalblue',
pch = 19, lwd = 2.5, cex = 1.5,
main = 'Gráfico de pendiente de autovalores',
font.lab = 2,
cex.main = 1.3)
1/sqrt(3)
cons = -colMeans(ventas) %*% G[,1];
colnames(cons) = 'cons';
cat('', sep = '\n'); round(cons[,], d = 4);
cat('', sep = '\n');
mat<-data.frame(pc.1 = round((1/sqrt(3))*(scores[,1] - cons), digits = 4), n.media = rowMeans(ventas))
cat('', sep = '\n');
round(G[,2], digits = 4)
show(mat)
round(G[,3], digits = 4)
cat('', sep = '\n'); round(cor(data.frame(ventas,scores[,1:2]))[1:3,1:3], digits = 4)
plot(scores, pch = 19,
col = 'mediumseagreen', cex = 1.4,
xlim = r, ylim = r);
#lineas de referencia
abline(h = 0, v = 0, lty = '1373', col = 'black',lwd = 1);
#identificar individuos
lab = c(1:n);
text(scores, labels = lab, font = 2, col = 'navy',cex = 1.5, pos = 1)
#seleccionar individuos
lab.plot = rep('',n);
lab.plot[1] = 'Std.1   '
lab.plot[c(2,28,66,81)] = paste0('Std.',c(2,28,66,81));
# vectorizar cex, pch, col, y pos
cex.plot = rep(1.4,n);
cex.plot[c(1,2,28,66,81)] = 1.6;
pch.plot = rep(19,n);
pch.plot[c(1,2,28,66,81)] = 15;
col.plot = rep('mediumseagreen',n);
col.plot[c(1,2,28,66,81)] = 'orangered';
pos.plot = rep(1,n);
pos.plot[1] = 3;
plot(scores, pch = pch.plot, col = col.plot, cex = cex.plot, xlim = r, ylim = r, col.lab = 'royalblue', font.lab = 2, cex.lab = 1.2)  ;
#box(lwd = 2);
#  líneas de referencia
abline(h = 0, v = 0, lty = '1373', col = 'brown',lwd = 2)
points(.0,.0,pch = 16, cex = 1.2, col = 'firebrick1')
# identificar individuos
text(scores, labels = lab.plot, font = 2, col = 'navy', cex = 1., pos = pos.plot)
title('ACP de Ventas', col.main = 'Blue',cex.main = 1.2)
cat('',sep = '\n'); round(G[,1:2], digits = 4);
cat('',sep = '\n'); ventas[c(1,2), ]
knitr::opts_chunk$set(echo = TRUE)
ventas = read.table('ventas.txt')
knitr::opts_chunk$set(echo = TRUE)
ventas = read.table('ventas.txt')
setwd("C:/Users/xvilan/Desktop/practicasADM")
knitr::opts_chunk$set(echo = TRUE)
ventas = read.table('ventas.txt')
show(ventas)
n = nrow(ventas)
print(c('número de filas=',n))
m = round(colMeans(ventas), digits = 4);
round(m, digits = 4);
S = cov(ventas);
round(S, digits = 4);
vt.ventas= round(sum(diag(S)), digits = 4)
vt.ventas
round(sqrt(diag(S)), digits = 4)
R = cor(ventas);
round(R, digits = 4)
round(c(min(R),max(R - diag(ncol(ventas)))), digits = 4);
plot(ventas,pch = 19,cex = 1,upper.panel = NULL,col = 'blue',
main = 'Datos de Ventas',cex.main = 1.4,gap = .15,cex.labels = 2,font.labels = 2)
help("princomp");
pc = princomp(ventas)
pc[1:7]
var = with(pc, sdev^2)
round(var, digits = 4)
sc = 1 - (1/n)
var.eq = (1/sc)*var
round(var.eq, digits = 4)
G = with(pc, loadings)[,]
round(G, digits = 4)
scores = data.frame(with(pc, scores));
show(scores)
G[,1] = -G[,1];
round(G[,1], digits =  4)
scores[,1] = -scores[,1]
round(scores[,1], digits =  4)
m.cp = round(colMeans(scores), digits = 4)
m.cp
S.cp= round(cov(scores), digits =  4)
S.cp
VT.cp = round(sum(diag(cov(scores))),digits = 4)
VT.cp
r = with(scores, range(Comp.1));
plot(scores, pch = 19, cex = 1.2, upper.panel = NULL, col = 'royalblue', main = 'ACP de Ventas', cex.main = 1.3,xlim = r,
ylim = r,gap = .15,cex.labels = 1.5,font.labels = 2)
plot(scores/sqrt(var), pch = 19,cex = 1.2, upper.panel = NULL, col = 'mediumseagreen', main = 'Datos esféricos de Ventas',labels = paste0('esf.',c(1:5)),cex.main = 1.3, gap = .15,cex.labels = 1.5,
font.labels = 2)
prop = S.cp/VT.cp;
acum = cumsum(prop)
table = round(data.frame(S.cp,prop,acum, row.names =NULL ),digits = 4)
cat('', sep = '\n');
prop
acum
show(table)
plot(pc, type = 'l', col = 'royalblue',
pch = 19, lwd = 2.5, cex = 1.5,
main = 'Gráfico de pendiente de autovalores',
font.lab = 2,
cex.main = 1.3)
1/sqrt(3)
cons = -colMeans(ventas) %*% G[,1];
colnames(cons) = 'cons';
cat('', sep = '\n'); round(cons[,], d = 4);
cat('', sep = '\n');
mat<-data.frame(pc.1 = round((1/sqrt(3))*(scores[,1] - cons), digits = 4), n.media = rowMeans(ventas))
cat('', sep = '\n');
round(G[,2], digits = 4)
show(mat)
round(G[,3], digits = 4)
cat('', sep = '\n'); round(cor(data.frame(ventas,scores[,1:2]))[1:3,1:3], digits = 4)
plot(scores, pch = 19,
col = 'mediumseagreen', cex = 1.4,
xlim = r, ylim = r);
#lineas de referencia
abline(h = 0, v = 0, lty = '1373', col = 'black',lwd = 1);
#identificar individuos
lab = c(1:n);
text(scores, labels = lab, font = 2, col = 'navy',cex = 1.5, pos = 1)
#seleccionar individuos
lab.plot = rep('',n);
lab.plot[1] = 'Std.1   '
lab.plot[c(2,28,66,81)] = paste0('Std.',c(2,28,66,81));
# vectorizar cex, pch, col, y pos
cex.plot = rep(1.4,n);
cex.plot[c(1,2,28,66,81)] = 1.6;
pch.plot = rep(19,n);
pch.plot[c(1,2,28,66,81)] = 15;
col.plot = rep('mediumseagreen',n);
col.plot[c(1,2,28,66,81)] = 'orangered';
pos.plot = rep(1,n);
pos.plot[1] = 3;
plot(scores, pch = pch.plot, col = col.plot, cex = cex.plot, xlim = r, ylim = r, col.lab = 'royalblue', font.lab = 2, cex.lab = 1.2)  ;
#box(lwd = 2);
#  líneas de referencia
abline(h = 0, v = 0, lty = '1373', col = 'brown',lwd = 2)
points(.0,.0,pch = 16, cex = 1.2, col = 'firebrick1')
# identificar individuos
text(scores, labels = lab.plot, font = 2, col = 'navy', cex = 1., pos = pos.plot)
title('ACP de Ventas', col.main = 'Blue',cex.main = 1.2)
cat('',sep = '\n'); round(G[,1:2], digits = 4);
cat('',sep = '\n'); ventas[c(1,2), ]
knitr::opts_chunk$set(echo = TRUE)
library(pander)
library(knitr)
data("airquality")
df <- head(airquality, 15)
kable( df , caption = "BBDD `airquality` con `kable()`"
, align = c('l', 'c', 'r', 'r', 'c', 'l')
, col.names = c("Ozono","Solar.R","Viento","Temp","Mes","Día")
, row.names = TRUE
, digits = 1
, format.args = list( decimal.mark = ",")
)
data("airquality")
df <- head(airquality, 15)
kable( df , caption = "BBDD `airquality` con `kable()`"
, align = c('l', 'c', 'r', 'r', 'c', 'l')
, col.names = c("Ozono","Solar.R","Viento","Temp","Mes","Día")
, row.names = TRUE
, digits = 1
, format.args = list( decimal.mark = ",")
)
ventas = read.table('ventas.txt')
show(ventas)
kable(ventas, caption="Tabla de ventas",digits = 2)
S = cov(ventas);
round(S, digits = 4);
kable(S)
unlink('notebook_cache', recursive = TRUE)
ventas = read.table('ventas.txt')
show(ventas)
kable(ventas, caption="Tabla de ventas",digits = 2)
ventas = read.table('ventas.txt')
#show(ventas)
kable(ventas, caption="Tabla de ventas",digits = 2)
ventas = read.table('ventas.txt')
#show(ventas)
kable(ventas, caption ="Tabla de ventas",digits = 2)
library("knitr", lib.loc="~/R/win-library/3.2")
ventas = read.table('ventas.txt')
#show(ventas)
kable(ventas, caption = "Tabla de ventas",digits = 2);
ventas = read.table('ventas.txt')
show(ventas)
install.packages("latex")
S = cov(ventas);
round(S, digits = 4);
= datos - MMULT(DIAG(IDENTITY(ROWS(datos)));MEANCOL(datos))
knitr::opts_chunk$set(cache=TRUE)
knitr::opts_chunk$set(cache = TRUE)
knitr::opts_chunk$set(echo = TRUE)
plot(cars)
install.packages("installr")
install.packages("pandoc")
Sys.getenv("PATH")
setwd("D:/Google Drive/CAF/11 ADMULTIVARIANTE/practicasADM")
knitr::opts_chunk$set(echo = TRUE)
ventas = read.table('ventas.txt')
show(ventas)
n = nrow(ventas)
print(c('número de filas=',n))
m = round(colMeans(ventas), digits = 4);
round(m, digits = 4);
S = cov(ventas);
round(S, digits = 4);
vt.ventas= round(sum(diag(S)), digits = 4)
vt.ventas
round(sqrt(diag(S)), digits = 4)
R = cor(ventas);
round(R, digits = 4)
round(c(min(R),max(R - diag(ncol(ventas)))), digits = 4);
plot(ventas,pch = 19,cex = 1,upper.panel = NULL,col = 'blue',
main = 'Datos de Ventas',cex.main = 1.4,gap = .15,cex.labels = 2,font.labels = 2)
pc = princomp(ventas)
pc[1:7]
var = with(pc, sdev^2)
round(var, digits = 4)
sc = 1 - (1/n)
var.eq = (1/sc)*var
round(var.eq, digits = 4)
G = with(pc, loadings)[,]
round(G, digits = 4)
scores = data.frame(with(pc, scores));
show(scores)
G[,1] = -G[,1];
round(G[,1], digits =  4)
scores[,1] = -scores[,1]
round(scores[,1], digits =  4)
m.cp = round(colMeans(scores), digits = 4)
m.cp
S.cp= round(cov(scores), digits =  4)
S.cp
VT.cp = round(sum(diag(cov(scores))),digits = 4)
VT.cp
r = with(scores, range(Comp.1));
plot(scores, pch = 19, cex = 1.2, upper.panel = NULL, col = 'royalblue', main = 'ACP de Ventas', cex.main = 1.3,xlim = r,
ylim = r,gap = .15,cex.labels = 1.5,font.labels = 2)
plot(scores/sqrt(var), pch = 19,cex = 1.2, upper.panel = NULL, col = 'mediumseagreen', main = 'Datos esféricos de Ventas',labels = paste0('esf.',c(1:5)),cex.main = 1.3, gap = .15,cex.labels = 1.5,
font.labels = 2)
prop = S.cp/VT.cp;
acum = cumsum(prop)
table = round(data.frame(S.cp,prop,acum, row.names =NULL ),digits = 4)
cat('', sep = '\n');
prop
acum
show(table)
plot(pc, type = 'l', col = 'royalblue',
pch = 19, lwd = 2.5, cex = 1.5,
main = 'Gráfico de pendiente de autovalores',
font.lab = 2,
cex.main = 1.3)
1/sqrt(3)
cons = -colMeans(ventas) %*% G[,1];
colnames(cons) = 'cons';
cat('', sep = '\n'); round(cons[,], d = 4);
cat('', sep = '\n');
mat<-data.frame(pc.1 = round((1/sqrt(3))*(scores[,1] - cons), digits = 4), n.media = rowMeans(ventas))
cat('', sep = '\n');
round(G[,2], digits = 4)
show(mat)
round(G[,3], digits = 4)
cat('', sep = '\n'); round(cor(data.frame(ventas,scores[,1:2]))[1:3,1:3], digits = 4)
plot(scores, pch = 19,
col = 'mediumseagreen', cex = 1.4,
xlim = r, ylim = r);
#lineas de referencia
abline(h = 0, v = 0, lty = '1373', col = 'black',lwd = 1);
#identificar individuos
lab = c(1:n);
text(scores, labels = lab, font = 2, col = 'navy',cex = 1.5, pos = 1)
#seleccionar individuos
lab.plot = rep('',n);
lab.plot[1] = 'Std.1   '
lab.plot[c(2,28,66,81)] = paste0('Std.',c(2,28,66,81));
# vectorizar cex, pch, col, y pos
cex.plot = rep(1.4,n);
cex.plot[c(1,2,28,66,81)] = 1.6;
pch.plot = rep(19,n);
pch.plot[c(1,2,28,66,81)] = 15;
col.plot = rep('mediumseagreen',n);
col.plot[c(1,2,28,66,81)] = 'orangered';
pos.plot = rep(1,n);
pos.plot[1] = 3;
plot(scores, pch = pch.plot, col = col.plot, cex = cex.plot, xlim = r, ylim = r, col.lab = 'royalblue', font.lab = 2, cex.lab = 1.2)  ;
#box(lwd = 2);
#  líneas de referencia
abline(h = 0, v = 0, lty = '1373', col = 'brown',lwd = 2)
points(.0,.0,pch = 16, cex = 1.2, col = 'firebrick1')
# identificar individuos
text(scores, labels = lab.plot, font = 2, col = 'navy', cex = 1., pos = pos.plot)
title('ACP de Ventas', col.main = 'Blue',cex.main = 1.2)
cat('',sep = '\n'); round(G[,1:2], digits = 4);
cat('',sep = '\n'); ventas[c(1,2), ]
library(rmarkdown)
install.packages("installr")
install.packages("pandoc")
